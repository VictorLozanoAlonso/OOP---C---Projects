Lambda and functor are pretty similar. In my opinion, the difference between them could be the context and the complexity. I mean, functor often is defined in a class and the logic will be complex than lambda. Otherwise, lambda often is defined in general context with simple logic.
Manage files needs to establish checking conditions in the most critical moment. It is at the open time. In our case, we use exception throwing an error. We could change the logic and establish if the file is not opened do nothing. It could be a logic modification to avoid run-time errors.
Is evident that book and movies have some common attributes, as a consequence public methods. I think we could optimize the code by creating a base class with all common attributes and methods. Then, we create derived classes for books and movies with specific features of each of them. In this way, we will eliminate code duplicity.
Default constructor could be eliminated if the attributes can be initialized to a safe empty state otherwise, we should use it.